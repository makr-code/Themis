name: docker-qnap

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKERHUB_REPO: themisdb/themis
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/themis

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            triplet: x64-linux
          - platform: linux/arm64
            triplet: arm64-linux
    steps:
      - uses: actions/checkout@v4
      - name: Decide if Docker Hub should be pushed
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "PUSH_IMAGE=true" >> $GITHUB_ENV
          else
            echo "PUSH_IMAGE=false" >> $GITHUB_ENV
          fi
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::12}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Compose image tags
        run: |
          set -e
          TAGS="${GHCR_REPO}:latest-${{ matrix.triplet }}\n${GHCR_REPO}:g${SHORT_SHA}-${{ matrix.triplet }}"
          if [ "${PUSH_IMAGE}" = "true" ]; then
            TAGS="$TAGS\n${DOCKERHUB_REPO}:latest-${{ matrix.triplet }}\n${DOCKERHUB_REPO}:g${SHORT_SHA}-${{ matrix.triplet }}"
          fi
          {
            echo 'TAGS<<EOF'
            echo -e "$TAGS"
            echo 'EOF'
          } >> "$GITHUB_ENV"
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            VCPKG_TRIPLET=${{ matrix.triplet }}
          tags: ${{ env.TAGS }}

  manifest:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::12}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push multi-arch manifests (Docker Hub)
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        env:
          DOCKERHUB_REPO: ${{ env.DOCKERHUB_REPO }}
        run: |
          set -e
          echo "Creating manifest for latest"
          docker manifest create "$DOCKERHUB_REPO:latest" \
            --amend "$DOCKERHUB_REPO:latest-x64-linux" \
            --amend "$DOCKERHUB_REPO:latest-arm64-linux"
          docker manifest push "$DOCKERHUB_REPO:latest"

          echo "Creating manifest for g$SHORT_SHA"
          docker manifest create "$DOCKERHUB_REPO:g$SHORT_SHA" \
            --amend "$DOCKERHUB_REPO:g$SHORT_SHA-x64-linux" \
            --amend "$DOCKERHUB_REPO:g$SHORT_SHA-arm64-linux"
          docker manifest push "$DOCKERHUB_REPO:g$SHORT_SHA"
      - name: Create and push multi-arch manifests (GHCR)
        env:
          GHCR_REPO: ${{ env.GHCR_REPO }}
        run: |
          set -e
          echo "Creating GHCR manifest for latest"
          docker manifest create "$GHCR_REPO:latest" \
            --amend "$GHCR_REPO:latest-x64-linux" \
            --amend "$GHCR_REPO:latest-arm64-linux"
          docker manifest push "$GHCR_REPO:latest"

          echo "Creating GHCR manifest for g$SHORT_SHA"
          docker manifest create "$GHCR_REPO:g$SHORT_SHA" \
            --amend "$GHCR_REPO:g$SHORT_SHA-x64-linux" \
            --amend "$GHCR_REPO:g$SHORT_SHA-arm64-linux"
          docker manifest push "$GHCR_REPO:g$SHORT_SHA"
