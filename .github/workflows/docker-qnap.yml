name: docker-qnap

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKERHUB_REPO: themisdb/themis

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            triplet: x64-linux
          - platform: linux/arm64
            triplet: arm64-linux
    steps:
      - uses: actions/checkout@v4
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::12}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            VCPKG_TRIPLET=${{ matrix.triplet }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest-${{ matrix.triplet }}
            ${{ env.DOCKERHUB_REPO }}:g${{ env.SHORT_SHA }}-${{ matrix.triplet }}

  manifest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::12}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create and push multi-arch manifests
        env:
          DOCKERHUB_REPO: ${{ env.DOCKERHUB_REPO }}
        run: |
          set -e
          echo "Creating manifest for latest"
          docker manifest create "$DOCKERHUB_REPO:latest" \
            --amend "$DOCKERHUB_REPO:latest-x64-linux" \
            --amend "$DOCKERHUB_REPO:latest-arm64-linux"
          docker manifest push "$DOCKERHUB_REPO:latest"

          echo "Creating manifest for g$SHORT_SHA"
          docker manifest create "$DOCKERHUB_REPO:g$SHORT_SHA" \
            --amend "$DOCKERHUB_REPO:g$SHORT_SHA-x64-linux" \
            --amend "$DOCKERHUB_REPO:g$SHORT_SHA-arm64-linux"
          docker manifest push "$DOCKERHUB_REPO:g$SHORT_SHA"
